def min_moves_to_a_good_string(n, s):
    dp = [0] * (n + 1)
    
    for i in range(1, n + 1):
        if s[i - 1] == 'a':
            dp[i] = dp[i - 1]
        else:
            dp[i] = dp[i - 1] + 1
            
            # Find the best split point j where first half is 'a' and second half is (s[i-1] + 1)-good
            j = i // 2
            dp[i] = min(dp[i], dp[j] + (i - j))
    
    return dp[n]

# Reading input
t = int(input().strip())

results = []
for _ in range(t):
    n = int(input().strip())
    s = input().strip()
    
    result = min_moves_to_a_good_string(n, s)
    results.append(result)

# Printing results
for res in results:
    print(res)
